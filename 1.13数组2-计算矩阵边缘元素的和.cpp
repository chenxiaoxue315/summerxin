/*输入一个整数矩阵，计算位于矩阵边缘的元素之和。所谓矩阵边缘的元素，就是第一行和最后一行的元素以及第一列和最后一列的元素。
输入
第一行分别为矩阵的行数m和列数n（m < 100，n < 100），两者之间以一个空格分开。
接下来输入的m行数据中，每行包含n个整数，整数之间以一个空格分开。
输出
输出对应矩阵的边缘元素和
样例输入
3 3
3 4 1
3 7 1
2 0 1
样例输出
15*/
#include<iostream>
using namespace std;
int main()
{
    int m,n,s,i,j;
    int a[100][100];
    cin>>m>>n;
    s=0;
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            cin>>a[i][j];
            if((i==0)||(i==m-1)||(j==0)||(j==n-1))//满足四个条件中的一个即认为是边缘元素 
            {
                s=s+a[i][j];//为什么不担心重复加的情况 
            }               //因为循环只把矩阵走了一遍，不会出现重复元素的情况 
        }
    }
        cout<<s;
    return 0;
} 

