/*描述:给定n*n由0和1组成的矩阵，如果矩阵的每一行和每一列的1的数量都是偶数，则认为符合条件。
你的任务就是检测矩阵是否符合条件，或者在仅改变一个矩阵元素的情况下能否符合条件。
"改变矩阵元素"的操作定义为0变成1或者1变成0。
输入:输入n + 1行，第1行为矩阵的大小n(0 < n < 100)，以下n行为矩阵的每一行的元素，元素之间以一个空格分开。
输出:如果矩阵符合条件，则输出OK；
如果矩阵仅改变一个矩阵元素就能符合条件，则输出需要改变的元素所在的行号和列号，以一个空格分开。
如果不符合以上两条，输出Corrupt。
样例输入1
4
1 0 1 0
0 0 0 0
1 1 1 1
0 1 0 1
样例输入2
4
1 0 1 0
0 0 1 0
1 1 1 1
0 1 0 1
样例输入3
4
1 0 1 0
0 1 1 0
1 1 1 1
0 1 0 1
样例输出1
OK
样例输出2
2 3
样例输出3
Corrupt*/ 
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int h[101],l[101];
int n;
int x,y,dx,dy;
int main()
{
    cin>>n;
    for(int i=1;i<=n;i++) 
      for(int j=1;j<=n;j++) 
        {
             int x;
             cin>>x;
             h[i]+=x;//每行之和用h[]数组存放 
             l[j]+=x;//每列的和用l[]数组存放 
        }
    x=y=0;
    for(int i=1;i<=n;i++)
     {
        if(h[i]&1) x++,dx=i;//判断此行的和是否是奇数 if(b%2==1) 若此行的和为奇数，说明在此行(列）改变一个数字可恢复为ok的状态 
        if(l[i]&1) y++,dy=i;//和行的原理一样 
     }
    if(x==1&&y==1) cout<<dx<<' '<<dy;//当全部元素中只有莫一行并且莫一列可以改变元素时，即x==1&&y==1时，输出行列值 
    else if(x>0||y>0) cout<<"Corrupt";//x或y有一个大于1了表示，不可能通过改变一个数的值变为符合的，所以输出corrupt 
    else cout<<"OK";//完全符合要求，即x,y都等于0的情况 
}


