/*描述
给出两幅相同大小的黑白图像（用0-1矩阵）表示，求它们的相似度。
说明：若两幅图像在相同位置上的像素点颜色相同，则称它们在该位置具有相同的像素点。两幅图像的相似度定义为相同像素点数占总像素点数的百分比。
输入
第一行包含两个整数m和n，表示图像的行数和列数，中间用单个空格隔开。1 <= m <= 100, 1 <= n <= 100。
之后m行，每行n个整数0或1，表示第一幅黑白图像上各像素点的颜色。相邻两个数之间用单个空格隔开。
之后m行，每行n个整数0或1，表示第二幅黑白图像上各像素点的颜色。相邻两个数之间用单个空格隔开。
输出
一个实数，表示相似度（以百分比的形式给出），精确到小数点后两位。
样例输入
3 3
1 0 1
0 0 1
1 1 0
1 1 0
0 0 1
0 0 1
样例输出
44.44*/
//两个矩阵进行比较，求比例
#include<iostream>
#include<cstdio>
using namespace std;
int main ()
{
	int a[105][105];
	int m,n,temp;
	double res=0;//temp用于第二个矩阵输入，res用于计算有多少个相同的元素点
	scanf("%d %d",&m,&n);
	int i,j;
	for(i=1;i<=m;i++)
	{
		for(j=1;j<=n;j++)
		{
			scanf("%d",&a[i][j]);
		}
	 } 
	
	for(i=1;i<=m;i++)
	{
		for(j=1;j<=n;j++)
		{
			scanf("%d",&temp);
			if(temp==a[i][j]) res++;//如果当前数组元素和前面一个相同，则有res++ 
		}
	}
	printf("%d\n",res);
	res=res*100.0/(n*m*1.0);
	printf("%.2lf",res);//展示半分比 
	return 0;
	
 } 
