/*描述
我的生日要到了！根据习俗，我需要将一些派分给大家。我有N个不同口味、不同大小的派。有F个朋友会来参加我的派对，每个人会拿到一块派（必须一个派的一块，不能由几个派的小块拼成；可以是一整个派）。
我的朋友们都特别小气，如果有人拿到更大的一块，就会开始抱怨。因此所有人拿到的派是同样大小的（但不需要是同样形状的），虽然这样有些派会被浪费，但总比搞砸整个派对好。当然，我也要给自己留一块，而这一块也要和其他人的同样大小。
请问我们每个人拿到的派最大是多少？每个派都是一个高为1，半径不等的圆柱体。
输入
第一行包含两个正整数N和F，1 ≤ N, F ≤ 10 000，表示派的数量和朋友的数量。
第二行包含N个1到10000之间的整数，表示每个派的半径。
输出
输出每个人能得到的最大的派的体积，精确到小数点后三位。
样例输入
3 3
4 3 3
样例输出
25.133*/ 
//注意：不可以是几个派的某部分组成，但是可以是几个完整的派组成  
#include<bits/stdc++.h>
using namespace std;
int n,f;
double pi=3.141592653589793;//pi的精度要求还是蛮高的 
double a[20000];
int main ()
{
	int i,t;
	double l=0,r=0,mid;
	cin>>n>>f;//n块蛋糕 f个朋友 
	f+=1;//自己也要吃 
	for(i=1;i<=n;i++)
	{
		cin>>a[i];
		a[i]=a[i]*a[i]*pi;//折半查找是总量，即总体积 
		if(a[i]>r) r=a[i];//确定右端（最大值） 
	}
	r+=0.0001;//加的都是最小的单位 
	while(l+0.0001<r)
	{
		t=0;
		mid=(l+r)/2;//mid代表的实际上是每个人分到的最大分量 
		for(i=1;i<=n;i++)
		    t+=a[i]/mid;
		if(t>=f) l=mid;//当次分量时，可分到的人比需要吃到的人多的时候，说明可以更大一点，所以l右移 
		else if(t<f) r=mid;
	}
	printf("%.3lf",l);
	return 0;
} 

